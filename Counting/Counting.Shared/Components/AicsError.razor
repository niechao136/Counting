@if (Show)
{
  <div class="error">
    <AicsTooltip Show="@_show" Placement="@TooltipPlacement.BottomStart">
      <TooltipTarget>
        <div @ref="_content" class="error__content">@Message</div>
      </TooltipTarget>
      <TooltipContent>@Message</TooltipContent>
    </AicsTooltip>
  </div>
}


@code {

  [Parameter] public string Message { get; set; } = string.Empty;
  [Parameter] public bool Show { get; set; }

  private bool _show;
  private ElementReference _content;
  private DotNetObjectReference<AicsError>? _reference;

  [JSInvokable]
  public void IsTextOverflow(bool isTextOverflow, int index)
  {
    if (_show == isTextOverflow) return;
    _show = isTextOverflow;
    StateHasChanged();
  }

  protected override async Task OnAfterRenderAsync(bool firstRender)
  {
    if (Common.IsClient(JsRuntime))
    {
      _reference ??= DotNetObjectReference.Create(this);
      await JsRuntime.InvokeVoidAsync("window.AicsCommon.IsTextOverflow", _reference, _content, "IsTextOverflow");
    }
  }

}